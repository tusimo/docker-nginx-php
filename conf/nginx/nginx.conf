# /etc/nginx/nginx.conf

daemon off;

user $ENV{"NGINX_USER"};

# Set number of worker processes automatically based on number of CPU cores.
worker_processes $ENV{"NGINX_WORKER_PROCESSES"};

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log $ENV{"NGINX_ERROR_LOG"};

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
        # The maximum number of simultaneous connections that can be opened by
        # a worker process.
        worker_connections $ENV{"NGINX_WORKER_CONNECTIONS"};
        use epoll;
        multi_accept on;
}

http {
        # Includes mapping of file name extensions to MIME types of responses
        # and defines the default type.
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        server_names_hash_bucket_size $ENV{"NGINX_SERVER_NAMES_HASH_BUCKET_SIZE"};
        client_header_buffer_size $ENV{"NGINX_CLIENT_HEADER_BUFFER_SIZE"};
        large_client_header_buffers $ENV{"NGINX_LARGE_CLIENT_HEADER_BUFFERS"};
        # Name servers used to resolve names of upstream servers into addresses.
        # It's also needed when using tcpsocket and udpsocket in Lua modules.
        #resolver 208.67.222.222 208.67.220.220;

        # Don't tell nginx version to clients.
        server_tokens off;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable.
        client_max_body_size $ENV{"NGINX_CLIENT_MAX_BODY_SIZE"};

        client_body_buffer_size $ENV{"NGINX_CLIENT_BODY_BUFFER_SIZE"};
        # Timeout for keep-alive connections. Server will close connections after
        # this time.
        keepalive_timeout $ENV{"NGINX_KEEPALIVE_TIMEOUT"};

        # Sendfile copies data between one FD and other from within the kernel,
        # which is more efficient than read() + write().
        sendfile on;

        # Don't buffer data-sends (disable Nagle algorithm).
        # Good for sending frequent small bursts of data in real time.
        tcp_nodelay on;

        # Causes nginx to attempt to send its HTTP response head in one packet,
        # instead of using partial frames.
        #tcp_nopush on;

        # Path of the file with Diffie-Hellman parameters for EDH ciphers.
        #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

        # Specifies that our cipher suits should be preferred over client ciphers.
        ssl_prefer_server_ciphers on;

        # Enables a shared SSL cache with size that can hold around 8000 sessions.
        ssl_session_cache shared:SSL:2m;


        #Gzip Compression
        gzip on;
        gzip_buffers 16 8k;
        gzip_comp_level 6;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
        text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
        text/javascript application/javascript application/x-javascript
        text/x-json application/json application/x-web-app-manifest+json
        text/css text/plain text/x-component
        font/opentype application/x-font-ttf application/vnd.ms-fontobject
        image/x-icon;
        gzip_disable "MSIE [1-6]\.(?!.*SV1)";

        # Enable checking the existence of precompressed files.
        #gzip_static on;

        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

        # Specifies the main log format.
        log_format main escape=json '{ "time_local": "$time_local", '
                            '"type": "access", '
                            '"module": "nginx", '
                            '"log_type": "access-log", '
                            '"remote_addr": "$remote_addr", '
                            '"referer": "$http_referer", '
                            '"request": "$request", '
                            '"status": $status, '
                            '"bytes": $body_bytes_sent, '
                            '"agent": "$http_user_agent", '
                            '"x_forwarded": "$http_x_forwarded_for", '
                            '"up_addr": "$upstream_addr",'
                            '"up_host": "$upstream_http_host",'
                            '"request_time": $request_time,'
                            '"request_body": "$request_body"'
        ' }';

        # Sets the path, format, and configuration for a buffered log write.
        access_log $ENV{"NGINX_ACCESS_LOG"};


        # Includes virtual hosts configs.
        include /etc/nginx/conf.d/*.conf;
}
